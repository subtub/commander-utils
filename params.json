{"name":"commander-utils","tagline":"The commander-utils add some useful functions to the commander.js module.","body":"# commander-utils v0.1.5  \r\n\r\n[![Build Status](https://travis-ci.org/subtub/commander-utils.png?branch=master)](https://travis-ci.org/subtub/commander-utils)\r\n\r\n## Table of Content\r\n\r\n[General Information](#general-information)  \r\n[Installation](#installation)  \r\n[Examples](#examples)  \r\n[API](#api)  \r\n[Running Tests](#running-tests)  \r\n\r\n## General Information\r\n\r\nThe `commander-utils` add some useful functions to the `commander.js` module.\r\n\r\n_[back to table of content](#table-of-content)_\r\n## Installation\r\n\r\nInstall the `commander-utils` by running:\r\n\r\n    npm install https://github.com/subtub/commander-utils/tarball/master\r\n\r\nIf you want to add the module to `package.json` paste this line:\r\n\r\n    \"commander-utils\": \"https://github.com/subtub/commander-utils/archive/v0.1.3.tar.gz\"\r\n\r\n_[back to table of content](#table-of-content)_\r\n## Examples\r\n\r\nThe simple example initialize the utility functions to the `commander.js` object.  \r\nDetailed information about the utils can be found at the [API](#api)\r\n\r\n```js\r\n#!/usr/bin/env node\r\n\r\n/**\r\n * This example integrates some package.json information.\r\n * Also add an example command and description to the --help output.\r\n */\r\n\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\nvar program = require('commander');\r\nvar CommanderUtils = require('../');\r\nvar pkg = require('../package.json');\r\n\r\n/**\r\n * Initialize the commander-utils module.\r\n */\r\nCommanderUtils(program, pkg);\r\n\r\n/**\r\n * Add an example command to the main --help page.\r\n */\r\nprogram.addExamples([{description: 'description of the example',\r\n                      command:     'the command'}]);\r\n\r\n/**\r\n * Add an option to the commandline interface.\r\n */\r\nprogram\r\n  .option('-f, --foo', 'foo stuff')\r\n\r\n/**\r\n * Parse the arguments.\r\n */\r\nprogram.parseUtils(process.argv);\r\n\r\n/**\r\n * If the --foo option is active, do someting.\r\n */\r\nif (program.foo) {\r\n  program.log.info('Foo to the Box');\r\n};\r\n\r\n```\r\n\r\nA detailed example can be found at the [examples](/examples) directory.\r\n\r\n_[back to table of content](#table-of-content)_\r\n## API\r\n \r\ngetLastArg()\r\n------------\r\nGet the last argument.\r\n\r\n\r\n\r\n**Returns**\r\n\r\n*String*,  The last argument\r\n\r\nparseUtils()\r\n------------\r\nParse the commands and options. The `program.parse` function is included at this function.\r\n\r\n**Example**\r\n```js\r\nprogram.parseUtils(process.argv);\r\n```\r\n\r\n\r\n\r\n\r\n**Returns**\r\n\r\n*Commander*,  The commander object.\r\n\r\nsetVersionLong(versionLong)\r\n---------------------------\r\nSet a long version of the cli tool. So we can add a codename or some other stuff.\r\nIf no long version was set, we use the `package.json` version.\r\n\r\n**Example**\r\n<pre>program.setVersionLong('v1.0.0 codename Release1');</pre>\r\n\r\n\r\n\r\n**Parameters**\r\n\r\n**versionLong**:  *String*,  A long version.\r\n\r\n**Returns**\r\n\r\n*Commander*,  The commander.js object.\r\n\r\nsetDescription(description)\r\n---------------------------\r\nSet the description of the cli tool.\r\nIf no description was set, we use the `package.json` description.\r\n\r\n**Example**\r\n<pre>program.setDescription('v1.0.0 codename Release1');</pre>\r\n\r\n\r\n\r\n**Parameters**\r\n\r\n**description**:  *String*,  The project description.\r\n\r\n**Returns**\r\n\r\n*Commander*,  The commander.js object.\r\n\r\naddExamples(The)\r\n----------------\r\nAdd examples to the main --help output.\r\n\r\n**Example**\r\n```js\r\nprogram.addExamples([{description: 'description of the example',\r\n                      command:     'the command'}]);\r\n```\r\n\r\nPrint out the following lines to console:\r\n\r\n```\r\n  Examples:\r\n\r\n    # description of the example\r\n    $ the command\r\n\r\n```\r\n\r\n\r\n\r\n\r\n**Parameters**\r\n\r\n**The**:  *Object*,  example as object.\r\n\r\n**Returns**\r\n\r\n*Commander*,  The commander.js object.\r\n\r\nsetUpdate(update)\r\n-----------------\r\nSet the update settings for the cli tool.\r\n\r\n**Example**\r\n<pre>program.setUpdate('v1.0.0 codename Release1');</pre>\r\n\r\n\r\n\r\n**Parameters**\r\n\r\n**update**:  *Object*,  The update configuration.\r\n\r\n**Returns**\r\n\r\n*Commander*,  The commander.js object.\r\n\r\nnoMainHelp()\r\n------------\r\nPrint no --help content if no command or option was set.\r\nThis can be used if you want to process something without other commands or options.\r\nThis overrides the default settings.\r\n\r\n\r\n\r\n**Returns**\r\n\r\n*Commander*,  The commander.js object.\r\n\r\ncommandExample(config)\r\n----------------------\r\nPrint out an usage description for an option or command.\r\n\r\n**Example**\r\n```js\r\n.on('--help', function() {  \r\n  program.commandExample({  \r\n    description: 'description of the command you want to display.',  \r\n    examples: [{description: 'description of the example',\r\n                command:     'cli cmd -o'},\r\n               {description: 'an other description',\r\n                command:     'cli othercmd -f'}]\r\n  })\r\n})\r\n```\r\n\r\nPrint out the following lines to console:\r\n\r\n```\r\n  Description:\r\n    description of the command you want to display.\r\n\r\n  Usage Examples:\r\n    # description of the example\r\n    $ cli cmd -o\r\n\r\n    # an other description\r\n    $ cli othercmd -f\r\n\r\n```\r\n\r\n\r\n\r\n\r\n**Parameters**\r\n\r\n**config**:  *Object*,  The example snippets we want to print out.\r\n\r\nlog.setSilent(silent)\r\n---------------------\r\nSet the log silent boolean\r\n\r\n**Example**\r\n<pre>program.log.setSilent(false);</pre>\r\n\r\n\r\n\r\n**Parameters**\r\n\r\n**silent**:  *Boolean*,  \r\n\r\n\r\n**Returns**\r\n\r\n*Object*,  The log config object.\r\n\r\nlog.setColorless(colorless)\r\n---------------------------\r\nSet the log colorless boolean\r\n\r\n**Example**\r\n<pre>program.log.setColorless(false);</pre>\r\n\r\n\r\n\r\n**Parameters**\r\n\r\n**colorless**:  *Boolean*,  \r\n\r\n\r\n**Returns**\r\n\r\n*Object*,  The log config object.\r\n\r\nlog.info(message)\r\n-----------------\r\nLog a info message.\r\n\r\n**Example**\r\n<pre>program.log.info('hello world');</pre>\r\n\r\n\r\n\r\n**Parameters**\r\n\r\n**message**:  *String*,  The message we want to log.\r\n\r\n**Returns**\r\n\r\n*String*,  The message we set at this function.\r\n\r\nlog.warn(message)\r\n-----------------\r\nLog a warn message.\r\n\r\n**Example**\r\n<pre>program.log.warn('hello warn');</pre>\r\n\r\n\r\n\r\n**Parameters**\r\n\r\n**message**:  *String*,  The message we want to log.\r\n\r\n**Returns**\r\n\r\n*String*,  The message we set at this function.\r\n\r\nlog.error(message)\r\n------------------\r\nLog an error message.\r\n\r\n**Example**\r\n<pre>program.log.error('hello error');</pre>\r\n\r\n\r\n\r\n**Parameters**\r\n\r\n**message**:  *String*,  The message we want to log.\r\n\r\n**Returns**\r\n\r\n*String*,  The message we set at this function.\r\n\r\n\r\n_[back to table of content](#table-of-content)_\r\n## Running Tests\r\n\r\nClone the repository, install node modules and run the test with the following command:\r\n\r\n    npm test\r\n\r\n_[back to table of content](#table-of-content)_\r\n## Contributors\r\n\r\n```\r\n project  : commander-utils\r\n repo age : 5 weeks\r\n active   : 16 days\r\n commits  : 171\r\n files    : 24\r\n authors  : \r\n   171\tPaul Vollmer            100,0%\r\n\r\n```\r\n\r\n\r\n_[back to table of content](#table-of-content)_\r\n## License\r\n\r\n```\r\nThe MIT License (MIT)  \r\n  \r\nCopyright (c) 2013 subtub  \r\n  \r\nPermission is hereby granted, free of charge, to any person obtaining a copy  \r\nof this software and associated documentation files (the \"Software\"), to deal  \r\nin the Software without restriction, including without limitation the rights  \r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell  \r\ncopies of the Software, and to permit persons to whom the Software is  \r\nfurnished to do so, subject to the following conditions:  \r\n  \r\nThe above copyright notice and this permission notice shall be included in  \r\nall copies or substantial portions of the Software.  \r\n  \r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  \r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  \r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE  \r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  \r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  \r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN  \r\nTHE SOFTWARE.  \r\n  ```\r\n\r\n_[back to table of content](#table-of-content)_\r\n\r\n\r\n---\r\n\r\n*This Readme was generated by [subtool](https://www.github.com/subtub/subtool/releases/tag/v0.1.5) on Wed Oct 23 2013 14:32:34 GMT+0200 (CEST).*  \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}